setwd("D:/Mis documentos/R directorio de trabajo")
pwd
pwd;
clear
dir
ls
ls -a
cd..
summary(cars)
library("digest", lib.loc="~/R/win-library/3.1")
detach("package:digest", unload=TRUE)
library("markdown", lib.loc="~/R/win-library/3.1")
detach("package:markdown", unload=TRUE)
install.packages("devtools")
library("devtools", lib.loc="~/R/win-library/3.1")
getwd
getwd ()
install.packages("swirl")
library("swirl", lib.loc="~/R/win-library/3.1")
library("knitr", lib.loc="~/R/win-library/3.1")
swirl()
5+7
x <-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)
c(1,2,3,4,)+c(0,10)
c(1,2,3,4,) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
class(x)
a<- c(4,TRUE)
class(a)
dim(x)
dim(a)
m<-1:33000
s <- list(2, "a", "b", TRUE)
s[[1]]
s[[4]]
s[[2]]
s[[3]]
t<-s[[3]]
t
t
class()
class(t)
class(x[[1]])
z+y
z(z<6)<-0
z[z<6]<-0
swirl()
library("swirl", lib.loc="~/R/win-library/3.1")
swirl()
getwd()
ls()
x<-9
ls
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir",recursive=TRUE)
?str
library("swirl", lib.loc="~/R/win-library/3.1")
x<-matrix(1:6,2,3)
x
x[1,2]
swirl()
swirl()
1:20
pi:10
15:1
?":"
seq(1:20)
seq(1, 20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
setwd("D:/Mis documentos/R directorio de trabajo/datasciencecoursera")
getwd()
data<-read.table("hw1_data.csv")
data<-read.csv("hw1_data.csv")
View(data)
data[2, ]
data[1:2, ]
leght(data)
lrngth(data)
length(data)
info(data)
data[152:153, ]
data[47, ]
ozone<-data[ ,1]
goodozone <- complete.cases(data[ ,1])
data[goodozone, ][1, ]
gozone <- data[goodozone, ][1:153, ]
View(gozone)
View(gozone)
view(goodozone)
table(gooozone)
table(goodozone)
?mean
View(data)
View(gozone)
mean(data[ ,1])
mean(data[1:153,1])
mean(data)
mean(ozone)
mean(my_seq)
mean(ozone, na.rm=TRUE)
mean(data[1:153,1], na.rm=TRUE)
mean(data[1], na.rm=TRUE)
data[1]
mean(data[1], na.rm=TRUE)
mean(data[,1], na.rm=TRUE)
data[1>31]
data[Ozone>31]
data[,1]>31
data[data[,1]>31]
data[,1]>31 && data[,4]>90
?"&"
data[,1]>31 & data[,4]>90
x<-data[,1]>31 & data[,4]>90
x<-as.data.flame(data[,1]>31 & data[,4]>90)
x<-as.data.frame(data[,1]>31 & data[,4]>90)
View(x)
x<-(data[,1]>31 & data[,4]>90)
y<-as.data.frame(data[x,])
View(y)
mean(y[,1:6], na.rm=TRUE)
lapply(y, mean)
?laply
?lapply
sapply(y, mean)
?sapply
mean(y[,2], na.rm=TRUE)
z<-data[,5]==6)
z<-data[,5]==6
mean(data[z,4], na.rm=TRUE)
a<-data[,5]==5)
a<-data[,5]==5
max(data(a,1), na.rm=TRUE)
max(data[a,1], na.rm=TRUE)
max(data[data[,5]==5,1] na.rm=TRUE)
max(data[data[,5]==5,1] ,na.rm=TRUE)
data[152:153,]
swirl
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
tf2<-num_vect>=6
tf2<-num_vect >= 6
tf2<-num_vect >= 6
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char, collapsec = " ")
paste(my_char, collapse = " ")
my_name<-c(my_char,"Antonio")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("x","y","z"), sep="")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
complete.cases(my_data)
is.nan(my_data)
is.na(my_data)
!is.na(my_data)
x<-1:10
x<-0
x <- 1:10
if(x > 5) {
x <- 0
}
cube <- function(x, n) {
x^3
}
cube(3)
x>5
x<-6:10
if(x > 5) {
+     x <- 0
+ }
if(x > 5) {
x <- 0
}
x>5
z<-numeric(5)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
args(lm)
args(mean)
args(table)
formals(lm)
lm
mean
swirl
resume.class
resume
new.env
globalenv
class
search()
ls(swirl)
ls(package.swirl)
ls("package.swirl")
ls("package:swirl")
?%in%
%in%
1 %in% 1:5
1,2 %in% 1:5
1:2 %in% 1:5
1:2 %in% 2:5
swirl()
x
exit()
quit
x
